@model StudentViewModel
@{
    ViewData["Title"] = "Student Roster";
}

<body>
    <div class="container body-content">
        <h2>Student Roster</h2>

        <!--search/filter/sort-->
        <div class="tabletop">
            <div id="left">
                <!--This button goes to the Add view which is the form for creating a student-->
                @Html.ActionLink("Create New", "Add", "Student", new { ViewBag.returnUrl })

                <!--Pressing Enter always submits the first button, this hidden search button gets priority over export button-->
                <button hidden form="searchForm" type="submit"></button>
                <!--Export button, connected to the searchForm so that the selected filtering is applied-->
                <button form="searchForm" formaction="Student/Export" type="submit">Export</button>
                <!--Sort-->
                <select form="searchForm" asp-for="SearchData.SortOrder" asp-items="ViewBag.SelectLists.SortOrderList"></select>
            </div>

            <!--Search Bar reloads view with selected form data-->
            <div id="search">
                <form id="searchForm" asp-controller="Student" asp-action="Index" method="get">
                    <input asp-for="SearchData.Name" placeholder="Enter Student Name" autofocus />
                    @Html.ActionLink("Clear", "Index", "Student") <!--Reload page to reset filters-->
                    <button type="submit">Go</button>
                </form>
            </div>
        </div>

        <!--Renders the select boxes for advanced search-->
        <partial name="_AdvancedSearch" />

        <!--table-->
        <table class="table">
            <tr>
                <th>Name</th>
                <th>Kids-U Site</th>
                <th>Grade</th>
                <th>School</th>
                <th>Active</th>
                <th colspan="2" class="th-center">@Model.SearchData.ResultCount Results | @ViewBag.resultPercent% of active students</th>
            </tr>

            <!--Displays all students from model. Students filtered in GetStudentsAsync()-->
            @foreach (var item in Model.Students)
            {
                <!--Click the row to run View(StudentId), goes to individual view-->
                <tr class="table-clickable-row" onclick="window.location = '/Student/View/?studentId=@item.StudentId&returnUrl=@System.Web.HttpUtility.UrlEncode(ViewBag.returnUrl)'">
                    <td>@item.FirstName @item.LastName</td>
                    <td>@item.Facility</td>
                    <td>@item.SchoolGrade</td>
                    <td>@item.SchoolName</td>
                    <td>@item.Active</td>
                    <td>
                        @Html.ActionLink("Report Cards", "View", "ReportCard", new { item.StudentId, ViewBag.returnUrl }) |
                        @Html.ActionLink("Outcome Measurements", "View", "OutcomeMeasurement", new { item.StudentId, ViewBag.returnUrl })
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { item.StudentId, ViewBag.returnUrl }) |
                        @using (Html.BeginForm("Delete", "Student", new { item.StudentId, ViewBag.returnUrl }))
                        {<input id="delete-btn" type="submit" value="Delete" onclick="return confirm('Are you sure you want to delete this Student?')" />}
                    </td>
                </tr>
            }
        </table>
        @Html.ActionLink("Back", "Index", "Home")
    </div>
</body>